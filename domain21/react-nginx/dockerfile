# syntax=docker/dockerfile:1.4

# 1. For build React app
FROM localhost:8082/node:hydrogen-bullseye AS development

# Set working directory
WORKDIR /app

# # Prepare deps from react-app 
# COPY ./react-nginx/react-app/package.json /app/package.json
# COPY ./react-nginx/react-app/package-lock.json /app/package-lock.json
# RUN npm ci
# COPY ./react-nginx/react-app /app
# ENV CI=true
# ENV PORT=3000

# Prepare deps from rest-api-sample1 
COPY ./react-nginx/rest-api-sample1 /app
RUN npm ci

ENV CI=true
ENV PORT=3000

CMD [ "npm", "start" ]

#FROM development AS build
# RUN npm run build


# FROM development as dev-envs
# RUN <<EOF
# apt-get update
# apt-get install -y --no-install-recommends git
# EOF

# RUN <<EOF
# useradd -s /bin/bash -m vscode
# groupadd docker
# usermod -aG docker vscode
# EOF

# install Docker tools (cli, buildx, compose)
COPY --from=gloursdocker/docker / /
CMD [ "npm", "start" ]

# 2. Nginx setup
FROM localhost:8082/nginx:1.23.3
# Inside: debian:bullseye-slim

RUN apt update && apt upgrade -y\resources\wiki\start\topics\examples\full\

# Install some dev-useful tools
RUN apt install -y mc tmux less vim curl wget net-tools

# RUN apt-get install -y nginx

# Install nodejs
# RUN apt install -y nodejs npm # Installs old version
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - &&\
  apt install -y \
    nodejs \
     build-essential
# https://github.com/nodesource/distributions/blob/master/README.md  

# Install pm2
RUN npm install pm2 -g
# https://gist.github.com/tomasevich/a2fe588c451c5a192893e6521a813020

# Install samba, kerberos and required utils
RUN DEBIAN_FRONTEND=noninteractive \
  apt install -y\
    samba \
    krb5-user \
    netcat iputils-ping iproute2

# clean up
RUN apt clean autoclean \
  && apt autoremove -y

# TODO find a better solution
# Workaround default smb.conf issue
# RUN rm /etc/samba/smb.conf \
#     && apt-get -f install

# Copy samba scripts
RUN mkdir -p /usr/local/sbin
COPY samba-utils /usr/local/sbin
WORKDIR /usr/local/sbin

# Copy config nginx
COPY ./react-nginx/nginx/nginx.conf /etc/nginx/conf.d/default.conf

WORKDIR /usr/share/nginx/html

# Remove default nginx static assets
RUN rm -rf ./*

# Copy static assets from builder/development stage
# For rest-api-sample1
COPY --from=development /app .

# Run pm2
RUN pm2 start app.js && \
  pm2 save && \
  pm2 startup

# Containers run nginx with global directives and daemon off
ENTRYPOINT ["nginx", "-g", "daemon off;"]

